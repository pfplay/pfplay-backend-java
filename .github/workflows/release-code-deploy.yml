name: Release - Code Deploy with Github Actions
#
#on:
#  push:
#    tags:
#      - 'v*'

on:
  push:
    branches: ["feature/code-deploy-with-actions"]

env:
  RESOURCE_DIR: src/main/resources
  GCR_PACKAGE_NAME: prod-pfplay-backend-java
  RELEASE_VERSION: 0.0.0

jobs:
  deploy:
    name: Build and dockerize & deploy
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: api

    steps:
      - name: Checkout
        uses: actions/checkout@v3
#
#      - name: Set env
#        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Create directory for resources
        run: mkdir -p $RESOURCE_DIR/key

      - name: Set application.yml
        env:
          PROPERTY_FILE: ${{ secrets.PROD_PROFILE }}
          PROPERTY_FILE_NAME: application.yml
        run: echo $PROPERTY_FILE | base64 --decode > $RESOURCE_DIR/$PROPERTY_FILE_NAME

      - name: Set JWT private key
        env:
          JWT_PRIVATE_KEY_FILE: ${{ secrets.JWT_PRIVATE_KEY }}
          JWT_PRIVATE_KEY_FILE_NAME: private_key.pem
        run: echo $JWT_PRIVATE_KEY_FILE | base64 --decode > $RESOURCE_DIR/key/$JWT_PRIVATE_KEY_FILE_NAME

      - name: Set JWT public key
        env:
          JWT_PUBLIC_KEY_FILE: ${{ secrets.JWT_PUBLIC_KEY }}
          JWT_PUBLIC_KEY_FILE_NAME: public_key.pem
        run: echo $JWT_PUBLIC_KEY_FILE | base64 --decode > $RESOURCE_DIR/key/$JWT_PUBLIC_KEY_FILE_NAME

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Git Actions cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: JeekLee
          password: ${{ secrets.PACKAGE_ACCESS_TOKEN }}

      - name: Build, tag and push image to Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./api/Dockerfile-deploy
          push: true
          tags: |
            ghcr.io/${{ env.GCR_PACKAGE_NAME }}:latest
            ghcr.io/${{ env.GCR_PACKAGE_NAME }}:${{ env.RELEASE_VERSION }}
          cache-from: type=gha # Refer: https://docs.docker.com/build/ci/github-actions/cache/
          cache-to: type=gha,mode=max
#
#      # TODO: Pull docker image and run image from Github Packages(Container Registry)
#      # 1. Docker pull
#      # 2. Docker kill
#      # 3. Docker rm
#      # 4. Docker run
#      # 5. Docker rmi
#      - name: Deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.GCP_VM_HOST }}
#          username: ubuntu
#          port: 22
#          script: |
